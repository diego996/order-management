name: Orders
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Lista gli ordini con filtri.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      customer_id:
        name: customer_id
        description: 'Filtra per ID cliente.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filtra per stato (pending, completed).'
        required: false
        example: pending
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'date Filtra data inizio.'
        required: false
        example: '2023-10-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'date Filtra data fine.'
        required: false
        example: '2023-10-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Numero di risultati per pagina.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      customer_id: 1
      status: pending
      date_from: '2023-10-01'
      date_to: '2023-10-31'
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [array di ordini ],
            "meta": {  paginazione  }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea un nuovo ordine.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_id:
        name: customer_id
        description: 'ID cliente.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_date:
        name: order_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-05-07T15:48:05'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order_code:
        name: order_code
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Stato ordine.'
        required: true
        example: pending
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      products:
        name: products
        description: 'Elenco prodotti con id e quantità.'
        required: true
        example:
          -
            id: 1
            quantity: 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'products[].product_id':
        name: 'products[].product_id'
        description: 'The <code>id</code> of an existing record in the products table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'products[].quantity':
        name: 'products[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: consequatur
      customer_id: 1
      order_date: '2025-05-07T15:48:05'
      order_code: consequatur
      status: pending
      products:
        -
          id: 1
          quantity: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "user_id": 1,
          "customer_id": 3,
          "order_date": "2025-05-07T00:00:00.000000Z",
          "order_code": "ORD-10012q",
          "status": "pending",
          "updated_at": "2025-05-07T15:43:57.000000Z",
          "created_at": "2025-05-07T15:43:57.000000Z",
          "id": 35
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostra i dettagli di un singolo ordine.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'ID dell’ordine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      order: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "customer_id": 1,
            "status": "pending",
            "total": 100.00,
            "products": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Order not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Aggiorna un ordine esistente.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'ID dell’ordine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      order: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_id:
        name: customer_id
        description: 'ID cliente.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order_date:
        name: order_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-05-07T15:48:05'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order_code:
        name: order_code
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: Stato.
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total:
        name: total
        description: 'Must be at least 0.'
        required: true
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      products:
        name: products
        description: 'Elenco prodotti.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'products[].product_id':
        name: 'products[].product_id'
        description: 'This field is required when <code>products</code> is present. The <code>id</code> of an existing record in the products table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'products[].quantity':
        name: 'products[].quantity'
        description: 'This field is required when <code>products</code> is present. Must be at least 1.'
        required: false
        example: 73
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'products[].price':
        name: 'products[].price'
        description: 'This field is required when <code>products</code> is present. Must be at least 0.'
        required: false
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: consequatur
      customer_id: 17
      order_date: '2025-05-07T15:48:05'
      order_code: consequatur
      status: consequatur
      total: 45
      products:
        - consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                  }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{ "message": "Order not found" }'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{  errore di validazione  }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina un ordine.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'ID dell’ordine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      order: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '- No Content'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{ "message": "Order not found" }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
